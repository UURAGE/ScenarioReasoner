language: c
sudo: false
cache:
  directories:
  - "$HOME/.cabsnap"
  - "$HOME/.cabal/packages"
before_cache:
- rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
- rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.tar
matrix:
  include:
  - env: CABALVER=1.22 GHCVER=7.10.3
    compiler: ": #GHC 7.10.3"
    addons:
      apt:
        packages:
        - cabal-install-1.22
        - ghc-7.10.3
        sources:
        - hvr-ghc
before_install:
- unset CC
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
install:
- cabal --version
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo
  '?')]"
- if [ -f $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz ]; then zcat $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz
  > $HOME/.cabal/packages/hackage.haskell.org/00-index.tar; fi
- travis_retry cabal update -v
- sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
- cabal install --only-dependencies --enable-tests --enable-benchmarks --dry -v >
  installplan.txt
- sed -i -e '1,/^Resolving /d' installplan.txt; cat installplan.txt
- if diff -u installplan.txt $HOME/.cabsnap/installplan.txt; then echo "cabal build-cache
  HIT"; rm -rfv .ghc; cp -a $HOME/.cabsnap/ghc $HOME/.ghc; cp -a $HOME/.cabsnap/lib
  $HOME/.cabsnap/share $HOME/.cabsnap/bin $HOME/.cabal/; else echo "cabal build-cache
  MISS"; rm -rf $HOME/.cabsnap; mkdir -p $HOME/.ghc $HOME/.cabal/lib $HOME/.cabal/share
  $HOME/.cabal/bin; cabal install --only-dependencies --enable-tests --enable-benchmarks;
  fi
- if [ ! -d $HOME/.cabsnap ]; then echo "snapshotting package-db to build-cache";
  mkdir $HOME/.cabsnap; cp -a $HOME/.ghc $HOME/.cabsnap/ghc; cp -a $HOME/.cabal/lib
  $HOME/.cabal/share $HOME/.cabal/bin installplan.txt $HOME/.cabsnap/; fi
script:
- if [ -f configure.ac ]; then autoreconf -i; fi
- cabal configure --enable-tests --enable-benchmarks -v2
- cabal build
notifications:
  slack:
    secure: qfdrwXtzre9ulMph2Tw4mQbRQSR84KneKSvIF/qDjJYvVtrGSa92t06gUCcga15jsMfyiUltjqfOeU7LwJdp9k56HpYMU9qXCWjaSL9GR/h99Z/nEyXsFTHsD/fkUWNcGiKlib2kRjeI30wQMG/0ttYDl/s81WsUFPgR5ToFQCQgxhv1WswWuZxZ1M1NI4rf5UzVYAXNoLlh1XijGmlF/j/IHGuCXf1RWg/IR+ZKfaesmY7Kmmh9OcBM7eNlfaslYuWPxACPU421qqPWFxmMZVKwc+OcktzlDkT+I7D06lxFWwq+kzJi9w4Ab+caPT0UKld1bCYfctDwi5yy5wB54435OMcRS7Qd3tCCqE/n/Pb0TzrgmuIVWCzmDxCjwytzQulWgIOcuG4djoHblJoVL+n1zItdzNpoHAIhKRuo4tI4tLghGCLgMu2GqL6UyQkx11V6wvKx+NlRqP4HXN2D/IEZnYjpPvZvc5BSYFGZQS5zwdaY7X3YwLp3oueTM7ijLxb+CCexLVz9Ug43RCD4EhTag7s5s42qzblV8wnq1huEbmmZb6irP77vZsO9FBdFOaM5ucUo+P0W3Eb9QWrpa+XM2S2nTUWR6WDITYzpMcrlD6osdlOrgf3HBxjOffo9iHXR8u+5k1StWyvTKH0CYpzeGMWTWs0WerISmtBEa3k=
